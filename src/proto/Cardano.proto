syntax = "proto3";

package TW.Cardano.Proto;
option java_package = "wallet.core.jni.proto";

import "Common.proto";

message OutPoint {
    string tx_hash = 1;
    uint64 output_index = 2;
}

message TxInput {
    OutPoint out_point = 1;
    
    // ADA amount // TODO proper type
    uint64 amount = 2;
}

message TxOutput {
    string address = 1;
    
    // ADA amount // TODO proper type
    uint64 amount = 2;
}

message Transfer {
    // Destination address as string
    string to_address = 1;

    // TODO check correct type
    uint64 amount = 2;
}

message TransactionPlan {
    uint64 amount = 1;
    uint64 availableAmount = 2;
    uint64 fee = 3;
    uint64 change = 4;
    repeated TxInput utxos = 5;
    Common.Proto.SigningError error = 6;
}

// Input data necessary to create a signed transaction
message SigningInput {
    repeated TxInput utxos = 1;

    // Private key bytes (double extended)
    bytes private_key = 2;

    // Later this can be made oneof if more message types are supported
    Transfer transfer_message = 3;

    // TODO plan as additional input

    uint64 ttl = 4;
}

// Transaction signing output
message SigningOutput {
    bytes encoded = 1;

    // Optional error
    Common.Proto.SigningError error = 2;
}
